var GameScreen=function(a,b,c){this.width=a,this.height=b,this.threshold=c};GameScreen.prototype.initialize=function(){var a=(d3.select("body").append("svg:svg").attr("width",this.width).attr("height",this.height),d3.select("svg"));a.selectAll("rect").data([[this.threshold/2,"#C477E2",0],[this.threshold/2,"#77D7E2",this.threshold/2]]).enter().append("rect")},GameScreen.prototype.render=function(a,b){var c=d3.scale.linear().domain([0,this.threshold]).range([0,this.width]),d=a-b,e=[c(this.threshold/2+d),"#C477E2",0],f=[c(this.threshold-(this.threshold/2+d)),"#77D7E2",c(this.threshold/2+d)],g=[];g.push(e),g.push(f);var h=d3.select("svg");h.selectAll("rect").data(g).transition().duration(400).attr("width",function(a){return a[0]}).attr("height",20).attr("fill",function(a){return a[1]}).attr("x",function(a){return a[2]})};var Racer=function(a){this.model=a.model},RacerModel=function(a){this.model={numCorrect:a,get:function(a){return this[a]}}},AppModel=Backbone.Model.extend({initialize:function(a){this.set("gameDisplay",new GameDisplayModel),this.set("speedTyper",new SpeedTyperModel)}}),GameDisplayModel=Backbone.Model.extend({}),SpeedTyperModel=Backbone.Model.extend({urlRoot:"/",defaults:{paragraph:"",numMissed:0,numCorrect:0,oppScore:0,currentIndex:0,wpm:0,practiceMode:!1,wordsPerView:30,gameOver:!1},initialize:function(){this.startGame(),this.set("socket",io.connect(window.location.host)),this.get("socket").on("connect",function(){console.log("Connected!")}),this.get("socket").on("update",this.updateOpponent.bind(this)),this.get("socket").on("practice",this.beginPractice.bind(this)),this.get("socket").on("win",this.gameWin.bind(this)),this.get("socket").on("lose",this.gameLose.bind(this)),this.get("socket").on("match",this.beginGame.bind(this)),this.set("paragraphArray",this.get("paragraph").split(" ")),this.updateCurrentLine()},beginPractice:function(){this.set("practiceMode",!0),this.set("startTime",Date.now())},beginGame:function(){this.set("practiceMode",!1),this.set("numCorrect",0),this.set("numMissed",0),this.set("wpm",0),this.trigger("update"),this.set("currentIndex",0),this.set("startTime",Date.now()),this.trigger("beginGame","true")},updateOpponent:function(a){this.set("oppScore",a.score)},gameWin:function(){this.set("gameOver",!0),this.trigger("gameWin")},gameLose:function(){this.set("gameOver",!0),this.trigger("gameLose")},startGame:function(){},fetchText:function(){var a=this;this.deferred=this.fetch({url:"/text",success:function(a,b){return b.text}}),this.deferred.done(function(b){a.set("paragraph",b.text),a.set("paragraphArray",a.get("paragraph").split(" ")),a.updateCurrentLine(),a.trigger("paragraphSet")})},spaceHandler:function(a){this.set("inputWord",a),a===this.get("paragraphArray")[this.get("currentIndex")]?(this.set("numCorrect",this.get("numCorrect")+1),this.get("practiceMode")||this.trigger("correct"),this.set("prevResult","correct"),this.get("socket").emit("update",{score:this.get("numCorrect")})):(this.set("numMissed",this.get("numMissed")+1),this.set("prevResult","incorrect")),this.set("currentIndex",this.get("currentIndex")+1),this.updateWordsPerMinute()},getCurrentWord:function(){return this.get("paragraphArray")[this.get("currentIndex")]},updateWordsPerMinute:function(){var a=this.get("startTime"),b=Date.now(),c=(b-a)/6e4,d=this.get("numCorrect")/c;this.set("wpm",d),this.trigger("update")},updateCurrentLine:function(){var a=this.get("wordsPerView"),b=this.get("currentIndex");console.log("The index is",b),this.set("currentLine",this.get("paragraphArray").slice(b,b+a)),console.log("The current line after updateCurrentLine is",this.get("currentLine"))},saveGame:function(){}}),AppView=Backbone.View.extend({className:"container",initialize:function(a){this.gameContainerView=new GameContainerView({model:this.model.get("speedTyper")}),this.speedTyperView=new SpeedTyperView({model:this.model.get("speedTyper")})},render:function(){return this.model.get("speedTyper").get("socket").emit("login"),this.$el.html([this.gameContainerView.$el,this.speedTyperView.$el])}}),StatsView=Backbone.View.extend({tagName:"div",className:"statsView",initialize:function(a){this.model.on("update",this.render,this),this.render()},render:function(){var a=$('<div class="wpm stats-box"></div>'),b=$('<div class="correct stats-box"></div>'),c=$('<div class="missed stats-box"></div>');return this.$el.html([a.append('<span class="num">'+Math.floor(this.model.get("wpm"))+'</span><span class="desc">wpm</span>'),b.append('<span class="num">'+this.model.get("numCorrect")+'</span><span class="desc">correct</span>'),c.append('<span class="num">'+this.model.get("numMissed")+'</span><span class="desc">missed</span>')])}}),InputView=Backbone.View.extend({tagName:"input",className:"noOutline form-control",initialize:function(){this.render(),this.model.bind("beginGame",this.beginGame.bind(this)),this.$el.prop("disabled",!1),this.model.on("change:gameOver",this.disableInput,this),this.model.on("paragraphSet",this.setCursorAndPlaceholder,this)},events:{input:function(a){var b=a.target.value;" "===b[b.length-1]?this.spacePressHandler(a):(this.$el.removeClass(this.model.get("prevResult")),this.$el.addClass("noOutline"),this.spellChecker(b))}},render:function(){return this.$el},beginGame:function(){this.$el.removeClass(this.model.get("prevResult")),this.$el.addClass("noOutline"),this.$el.val("")},setCursorAndPlaceholder:function(){this.$el.attr("placeholder",this.model.getCurrentWord()),this.$el.focus()},spacePressHandler:function(a){var b=a.target.value;this.model.spaceHandler(b.substring(0,b.length-1)),this.$el.removeClass("warning noOutline"),this.$el.addClass(this.model.get("prevResult")),a.target.value="",this.$el.attr("placeholder",this.model.getCurrentWord())},spellChecker:function(a){var b=this.model.getCurrentWord();a!==b.substring(0,a.length)?this.$el.addClass("warning"):this.$el.removeClass("warning")},disableInput:function(){this.$el.prop("disabled",!0)}}),ParagraphView=Backbone.View.extend({tagName:"div",className:"paragraph-text",initialize:function(){this.model.on("change:currentIndex",this.updateCurrent,this),this.model.on("paragraphSet",this.updateCurrent,this),this.model.on("change:currentLine",this.render,this),this.model.fetchText(),this.render()},render:function(){return this.$el.html(["<p>"+this.model.get("currentLine").join(" ")+"</p>"])},updateLines:function(){this.model.updateCurrentLine()},updateCurrent:function(){var a=this.model.get("currentIndex"),b=a%this.model.get("wordsPerView"),c=this.model.get("currentLine").slice(),d=this.model.get("wordsPerView");b%d===0&&(this.updateLines(),c=this.model.get("currentLine").slice()),c[b]="<span class='currentWord'>"+c[b]+"</span>",this.$el.html(["<p>"+c.join(" ")+"</p>"])}}),GameDisplayView=Backbone.View.extend({tagName:"div",className:"gameView",initialize:function(a){this.model.on("correct",this.update,this),this.model.on("change:oppScore",this.update,this),this.model.on("change:gameOver",this.gameOver,this),this.game=new GameScreen(window.innerWidth,100,40),this.game.initialize(),this.render()},render:function(){this.game.render(0,0)},update:function(){this.game.render(this.model.get("numCorrect"),this.model.get("oppScore"))},gameStart:function(){},gameOver:function(){}}),GameContainerView=Backbone.View.extend({className:"gameContainer",initialize:function(a){this.gameDisplayView=new GameDisplayView({model:this.model})},render:function(){}}),SpeedTyperView=Backbone.View.extend({tagName:"div",className:"speedTyperContainer",events:{"click .button":"restart"},initialize:function(a){this.statsView=new StatsView({model:this.model}),this.paragraphView=new ParagraphView({model:this.model}),this.inputView=new InputView({model:this.model}),this.render(),this.model.on("beginGame",function(){this.changeText("beginGame")},this),this.model.on("gameWin",function(){this.changeText("win")},this),this.model.on("gameLose",function(){this.changeText("lose")},this)},render:function(){var a=$('<div class="typing-view"></div>'),b=$('<div class="stats-view"></div>');return this.$el.html(["<h2>Waiting for Opponent...</h2>",'<h3 class="practice">In the meantime practice your typing skills!</h3>',a.append([this.paragraphView.$el,this.inputView.$el]),b.append([this.statsView.$el])])},changeText:function(a){"beginGame"===a?($("h2").text("Start Typing!"),$("h3.practice").remove()):"win"===a?($("h2").text("You win!"),$("h2").append('<p><a href="#" class="button">New Game</a></p>')):"lose"===a&&($("h2").text("You lose!"),$("h2").append('<p><a href="#" class="button">New Game</a></p>'))},restart:function(){this.model.get("socket").emit("login"),this.initialize()}});
//# sourceMappingURL=game.min.js.map